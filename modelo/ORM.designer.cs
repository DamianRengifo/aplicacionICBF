#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace aplicacionICBF.modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ICBF")]
	public partial class ORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertciudad_nacimiento(ciudad_nacimiento instance);
    partial void Updateciudad_nacimiento(ciudad_nacimiento instance);
    partial void Deleteciudad_nacimiento(ciudad_nacimiento instance);
    partial void Inserteps(eps instance);
    partial void Updateeps(eps instance);
    partial void Deleteeps(eps instance);
    partial void Insertestados(estados instance);
    partial void Updateestados(estados instance);
    partial void Deleteestados(estados instance);
    partial void Insertniños(niños instance);
    partial void Updateniños(niños instance);
    partial void Deleteniños(niños instance);
    partial void Insertnotas(notas instance);
    partial void Updatenotas(notas instance);
    partial void Deletenotas(notas instance);
    partial void Insertnivel(nivel instance);
    partial void Updatenivel(nivel instance);
    partial void Deletenivel(nivel instance);
    partial void Insertregistro_asistencia(registro_asistencia instance);
    partial void Updateregistro_asistencia(registro_asistencia instance);
    partial void Deleteregistro_asistencia(registro_asistencia instance);
    partial void Insertregistro_avance_academico(registro_avance_academico instance);
    partial void Updateregistro_avance_academico(registro_avance_academico instance);
    partial void Deleteregistro_avance_academico(registro_avance_academico instance);
    partial void Insertregistro_jardin(registro_jardin instance);
    partial void Updateregistro_jardin(registro_jardin instance);
    partial void Deleteregistro_jardin(registro_jardin instance);
    partial void Insertroles(roles instance);
    partial void Updateroles(roles instance);
    partial void Deleteroles(roles instance);
    partial void Inserttipo_estados(tipo_estados instance);
    partial void Updatetipo_estados(tipo_estados instance);
    partial void Deletetipo_estados(tipo_estados instance);
    partial void Inserttipo_sangre(tipo_sangre instance);
    partial void Updatetipo_sangre(tipo_sangre instance);
    partial void Deletetipo_sangre(tipo_sangre instance);
    partial void Insertusuarios(usuarios instance);
    partial void Updateusuarios(usuarios instance);
    partial void Deleteusuarios(usuarios instance);
    #endregion
		
		public ORMDataContext() : 
				base(global::aplicacionICBF.Properties.Settings.Default.ICBFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ciudad_nacimiento> ciudad_nacimiento
		{
			get
			{
				return this.GetTable<ciudad_nacimiento>();
			}
		}
		
		public System.Data.Linq.Table<eps> eps
		{
			get
			{
				return this.GetTable<eps>();
			}
		}
		
		public System.Data.Linq.Table<estados> estados
		{
			get
			{
				return this.GetTable<estados>();
			}
		}
		
		public System.Data.Linq.Table<niños> niños
		{
			get
			{
				return this.GetTable<niños>();
			}
		}
		
		public System.Data.Linq.Table<notas> notas
		{
			get
			{
				return this.GetTable<notas>();
			}
		}
		
		public System.Data.Linq.Table<nivel> nivel
		{
			get
			{
				return this.GetTable<nivel>();
			}
		}
		
		public System.Data.Linq.Table<registro_asistencia> registro_asistencia
		{
			get
			{
				return this.GetTable<registro_asistencia>();
			}
		}
		
		public System.Data.Linq.Table<registro_avance_academico> registro_avance_academico
		{
			get
			{
				return this.GetTable<registro_avance_academico>();
			}
		}
		
		public System.Data.Linq.Table<registro_jardin> registro_jardin
		{
			get
			{
				return this.GetTable<registro_jardin>();
			}
		}
		
		public System.Data.Linq.Table<roles> roles
		{
			get
			{
				return this.GetTable<roles>();
			}
		}
		
		public System.Data.Linq.Table<tipo_estados> tipo_estados
		{
			get
			{
				return this.GetTable<tipo_estados>();
			}
		}
		
		public System.Data.Linq.Table<tipo_sangre> tipo_sangre
		{
			get
			{
				return this.GetTable<tipo_sangre>();
			}
		}
		
		public System.Data.Linq.Table<usuarios> usuarios
		{
			get
			{
				return this.GetTable<usuarios>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ciudad_nacimiento")]
	public partial class ciudad_nacimiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCiudad;
		
		private string _nomCiudad;
		
		private EntitySet<niños> _niños;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCiudadChanging(int value);
    partial void OnidCiudadChanged();
    partial void OnnomCiudadChanging(string value);
    partial void OnnomCiudadChanged();
    #endregion
		
		public ciudad_nacimiento()
		{
			this._niños = new EntitySet<niños>(new Action<niños>(this.attach_niños), new Action<niños>(this.detach_niños));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCiudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCiudad
		{
			get
			{
				return this._idCiudad;
			}
			set
			{
				if ((this._idCiudad != value))
				{
					this.OnidCiudadChanging(value);
					this.SendPropertyChanging();
					this._idCiudad = value;
					this.SendPropertyChanged("idCiudad");
					this.OnidCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomCiudad", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nomCiudad
		{
			get
			{
				return this._nomCiudad;
			}
			set
			{
				if ((this._nomCiudad != value))
				{
					this.OnnomCiudadChanging(value);
					this.SendPropertyChanging();
					this._nomCiudad = value;
					this.SendPropertyChanged("nomCiudad");
					this.OnnomCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudad_nacimiento_niños", Storage="_niños", ThisKey="idCiudad", OtherKey="fk_idCiudad")]
		public EntitySet<niños> niños
		{
			get
			{
				return this._niños;
			}
			set
			{
				this._niños.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.ciudad_nacimiento = this;
		}
		
		private void detach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.ciudad_nacimiento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.eps")]
	public partial class eps : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEps;
		
		private string _nomEps;
		
		private EntitySet<niños> _niños;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEpsChanging(int value);
    partial void OnidEpsChanged();
    partial void OnnomEpsChanging(string value);
    partial void OnnomEpsChanged();
    #endregion
		
		public eps()
		{
			this._niños = new EntitySet<niños>(new Action<niños>(this.attach_niños), new Action<niños>(this.detach_niños));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEps", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEps
		{
			get
			{
				return this._idEps;
			}
			set
			{
				if ((this._idEps != value))
				{
					this.OnidEpsChanging(value);
					this.SendPropertyChanging();
					this._idEps = value;
					this.SendPropertyChanged("idEps");
					this.OnidEpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomEps", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string nomEps
		{
			get
			{
				return this._nomEps;
			}
			set
			{
				if ((this._nomEps != value))
				{
					this.OnnomEpsChanging(value);
					this.SendPropertyChanging();
					this._nomEps = value;
					this.SendPropertyChanged("nomEps");
					this.OnnomEpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eps_niños", Storage="_niños", ThisKey="idEps", OtherKey="fk_idEps")]
		public EntitySet<niños> niños
		{
			get
			{
				return this._niños;
			}
			set
			{
				this._niños.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.eps = this;
		}
		
		private void detach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.eps = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.estados")]
	public partial class estados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEstado;
		
		private string _nomEstado;
		
		private int _fk_idTiposEstados;
		
		private EntitySet<registro_asistencia> _registro_asistencia;
		
		private EntitySet<registro_jardin> _registro_jardin;
		
		private EntityRef<tipo_estados> _tipo_estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnnomEstadoChanging(string value);
    partial void OnnomEstadoChanged();
    partial void Onfk_idTiposEstadosChanging(int value);
    partial void Onfk_idTiposEstadosChanged();
    #endregion
		
		public estados()
		{
			this._registro_asistencia = new EntitySet<registro_asistencia>(new Action<registro_asistencia>(this.attach_registro_asistencia), new Action<registro_asistencia>(this.detach_registro_asistencia));
			this._registro_jardin = new EntitySet<registro_jardin>(new Action<registro_jardin>(this.attach_registro_jardin), new Action<registro_jardin>(this.detach_registro_jardin));
			this._tipo_estados = default(EntityRef<tipo_estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomEstado", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string nomEstado
		{
			get
			{
				return this._nomEstado;
			}
			set
			{
				if ((this._nomEstado != value))
				{
					this.OnnomEstadoChanging(value);
					this.SendPropertyChanging();
					this._nomEstado = value;
					this.SendPropertyChanged("nomEstado");
					this.OnnomEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idTiposEstados", DbType="Int NOT NULL")]
		public int fk_idTiposEstados
		{
			get
			{
				return this._fk_idTiposEstados;
			}
			set
			{
				if ((this._fk_idTiposEstados != value))
				{
					if (this._tipo_estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idTiposEstadosChanging(value);
					this.SendPropertyChanging();
					this._fk_idTiposEstados = value;
					this.SendPropertyChanged("fk_idTiposEstados");
					this.Onfk_idTiposEstadosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_registro_asistencia", Storage="_registro_asistencia", ThisKey="idEstado", OtherKey="fk_idEstado")]
		public EntitySet<registro_asistencia> registro_asistencia
		{
			get
			{
				return this._registro_asistencia;
			}
			set
			{
				this._registro_asistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_registro_jardin", Storage="_registro_jardin", ThisKey="idEstado", OtherKey="fk_idEstado")]
		public EntitySet<registro_jardin> registro_jardin
		{
			get
			{
				return this._registro_jardin;
			}
			set
			{
				this._registro_jardin.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_estados_estados", Storage="_tipo_estados", ThisKey="fk_idTiposEstados", OtherKey="idTipEstados", IsForeignKey=true)]
		public tipo_estados tipo_estados
		{
			get
			{
				return this._tipo_estados.Entity;
			}
			set
			{
				tipo_estados previousValue = this._tipo_estados.Entity;
				if (((previousValue != value) 
							|| (this._tipo_estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipo_estados.Entity = null;
						previousValue.estados.Remove(this);
					}
					this._tipo_estados.Entity = value;
					if ((value != null))
					{
						value.estados.Add(this);
						this._fk_idTiposEstados = value.idTipEstados;
					}
					else
					{
						this._fk_idTiposEstados = default(int);
					}
					this.SendPropertyChanged("tipo_estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registro_asistencia(registro_asistencia entity)
		{
			this.SendPropertyChanging();
			entity.estados = this;
		}
		
		private void detach_registro_asistencia(registro_asistencia entity)
		{
			this.SendPropertyChanging();
			entity.estados = null;
		}
		
		private void attach_registro_jardin(registro_jardin entity)
		{
			this.SendPropertyChanging();
			entity.estados = this;
		}
		
		private void detach_registro_jardin(registro_jardin entity)
		{
			this.SendPropertyChanging();
			entity.estados = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.niños")]
	public partial class niños : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNiño;
		
		private string _nombre;
		
		private string _numIdentificacion;
		
		private string _telefonoNiño;
		
		private string _direccionNiño;
		
		private int _fk_idCiudad;
		
		private int _fk_idEps;
		
		private int _fk_idTipSangre;
		
		private int _fk_idAcudiente;
		
		private int _fk_idJardin;
		
		private System.DateTime _fechaNac;
		
		private EntitySet<registro_asistencia> _registro_asistencia;
		
		private EntitySet<registro_avance_academico> _registro_avance_academico;
		
		private EntityRef<ciudad_nacimiento> _ciudad_nacimiento;
		
		private EntityRef<eps> _eps;
		
		private EntityRef<registro_jardin> _registro_jardin;
		
		private EntityRef<tipo_sangre> _tipo_sangre;
		
		private EntityRef<usuarios> _usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNiñoChanging(int value);
    partial void OnidNiñoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnnumIdentificacionChanging(string value);
    partial void OnnumIdentificacionChanged();
    partial void OntelefonoNiñoChanging(string value);
    partial void OntelefonoNiñoChanged();
    partial void OndireccionNiñoChanging(string value);
    partial void OndireccionNiñoChanged();
    partial void Onfk_idCiudadChanging(int value);
    partial void Onfk_idCiudadChanged();
    partial void Onfk_idEpsChanging(int value);
    partial void Onfk_idEpsChanged();
    partial void Onfk_idTipSangreChanging(int value);
    partial void Onfk_idTipSangreChanged();
    partial void Onfk_idAcudienteChanging(int value);
    partial void Onfk_idAcudienteChanged();
    partial void Onfk_idJardinChanging(int value);
    partial void Onfk_idJardinChanged();
    partial void OnfechaNacChanging(System.DateTime value);
    partial void OnfechaNacChanged();
    #endregion
		
		public niños()
		{
			this._registro_asistencia = new EntitySet<registro_asistencia>(new Action<registro_asistencia>(this.attach_registro_asistencia), new Action<registro_asistencia>(this.detach_registro_asistencia));
			this._registro_avance_academico = new EntitySet<registro_avance_academico>(new Action<registro_avance_academico>(this.attach_registro_avance_academico), new Action<registro_avance_academico>(this.detach_registro_avance_academico));
			this._ciudad_nacimiento = default(EntityRef<ciudad_nacimiento>);
			this._eps = default(EntityRef<eps>);
			this._registro_jardin = default(EntityRef<registro_jardin>);
			this._tipo_sangre = default(EntityRef<tipo_sangre>);
			this._usuarios = default(EntityRef<usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNiño", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNiño
		{
			get
			{
				return this._idNiño;
			}
			set
			{
				if ((this._idNiño != value))
				{
					if (this._usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNiñoChanging(value);
					this.SendPropertyChanging();
					this._idNiño = value;
					this.SendPropertyChanged("idNiño");
					this.OnidNiñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numIdentificacion", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string numIdentificacion
		{
			get
			{
				return this._numIdentificacion;
			}
			set
			{
				if ((this._numIdentificacion != value))
				{
					this.OnnumIdentificacionChanging(value);
					this.SendPropertyChanging();
					this._numIdentificacion = value;
					this.SendPropertyChanged("numIdentificacion");
					this.OnnumIdentificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefonoNiño", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string telefonoNiño
		{
			get
			{
				return this._telefonoNiño;
			}
			set
			{
				if ((this._telefonoNiño != value))
				{
					this.OntelefonoNiñoChanging(value);
					this.SendPropertyChanging();
					this._telefonoNiño = value;
					this.SendPropertyChanged("telefonoNiño");
					this.OntelefonoNiñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccionNiño", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string direccionNiño
		{
			get
			{
				return this._direccionNiño;
			}
			set
			{
				if ((this._direccionNiño != value))
				{
					this.OndireccionNiñoChanging(value);
					this.SendPropertyChanging();
					this._direccionNiño = value;
					this.SendPropertyChanged("direccionNiño");
					this.OndireccionNiñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idCiudad", DbType="Int NOT NULL")]
		public int fk_idCiudad
		{
			get
			{
				return this._fk_idCiudad;
			}
			set
			{
				if ((this._fk_idCiudad != value))
				{
					if (this._ciudad_nacimiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idCiudadChanging(value);
					this.SendPropertyChanging();
					this._fk_idCiudad = value;
					this.SendPropertyChanged("fk_idCiudad");
					this.Onfk_idCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idEps", DbType="Int NOT NULL")]
		public int fk_idEps
		{
			get
			{
				return this._fk_idEps;
			}
			set
			{
				if ((this._fk_idEps != value))
				{
					if (this._eps.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idEpsChanging(value);
					this.SendPropertyChanging();
					this._fk_idEps = value;
					this.SendPropertyChanged("fk_idEps");
					this.Onfk_idEpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idTipSangre", DbType="Int NOT NULL")]
		public int fk_idTipSangre
		{
			get
			{
				return this._fk_idTipSangre;
			}
			set
			{
				if ((this._fk_idTipSangre != value))
				{
					if (this._tipo_sangre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idTipSangreChanging(value);
					this.SendPropertyChanging();
					this._fk_idTipSangre = value;
					this.SendPropertyChanged("fk_idTipSangre");
					this.Onfk_idTipSangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idAcudiente", DbType="Int NOT NULL")]
		public int fk_idAcudiente
		{
			get
			{
				return this._fk_idAcudiente;
			}
			set
			{
				if ((this._fk_idAcudiente != value))
				{
					this.Onfk_idAcudienteChanging(value);
					this.SendPropertyChanging();
					this._fk_idAcudiente = value;
					this.SendPropertyChanged("fk_idAcudiente");
					this.Onfk_idAcudienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idJardin", DbType="Int NOT NULL")]
		public int fk_idJardin
		{
			get
			{
				return this._fk_idJardin;
			}
			set
			{
				if ((this._fk_idJardin != value))
				{
					if (this._registro_jardin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idJardinChanging(value);
					this.SendPropertyChanging();
					this._fk_idJardin = value;
					this.SendPropertyChanged("fk_idJardin");
					this.Onfk_idJardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaNac", DbType="Date NOT NULL")]
		public System.DateTime fechaNac
		{
			get
			{
				return this._fechaNac;
			}
			set
			{
				if ((this._fechaNac != value))
				{
					this.OnfechaNacChanging(value);
					this.SendPropertyChanging();
					this._fechaNac = value;
					this.SendPropertyChanged("fechaNac");
					this.OnfechaNacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="niños_registro_asistencia", Storage="_registro_asistencia", ThisKey="idNiño", OtherKey="fk_idNiño")]
		public EntitySet<registro_asistencia> registro_asistencia
		{
			get
			{
				return this._registro_asistencia;
			}
			set
			{
				this._registro_asistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="niños_registro_avance_academico", Storage="_registro_avance_academico", ThisKey="idNiño", OtherKey="fk_idNiño")]
		public EntitySet<registro_avance_academico> registro_avance_academico
		{
			get
			{
				return this._registro_avance_academico;
			}
			set
			{
				this._registro_avance_academico.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudad_nacimiento_niños", Storage="_ciudad_nacimiento", ThisKey="fk_idCiudad", OtherKey="idCiudad", IsForeignKey=true)]
		public ciudad_nacimiento ciudad_nacimiento
		{
			get
			{
				return this._ciudad_nacimiento.Entity;
			}
			set
			{
				ciudad_nacimiento previousValue = this._ciudad_nacimiento.Entity;
				if (((previousValue != value) 
							|| (this._ciudad_nacimiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudad_nacimiento.Entity = null;
						previousValue.niños.Remove(this);
					}
					this._ciudad_nacimiento.Entity = value;
					if ((value != null))
					{
						value.niños.Add(this);
						this._fk_idCiudad = value.idCiudad;
					}
					else
					{
						this._fk_idCiudad = default(int);
					}
					this.SendPropertyChanged("ciudad_nacimiento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eps_niños", Storage="_eps", ThisKey="fk_idEps", OtherKey="idEps", IsForeignKey=true)]
		public eps eps
		{
			get
			{
				return this._eps.Entity;
			}
			set
			{
				eps previousValue = this._eps.Entity;
				if (((previousValue != value) 
							|| (this._eps.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eps.Entity = null;
						previousValue.niños.Remove(this);
					}
					this._eps.Entity = value;
					if ((value != null))
					{
						value.niños.Add(this);
						this._fk_idEps = value.idEps;
					}
					else
					{
						this._fk_idEps = default(int);
					}
					this.SendPropertyChanged("eps");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registro_jardin_niños", Storage="_registro_jardin", ThisKey="fk_idJardin", OtherKey="idJardin", IsForeignKey=true)]
		public registro_jardin registro_jardin
		{
			get
			{
				return this._registro_jardin.Entity;
			}
			set
			{
				registro_jardin previousValue = this._registro_jardin.Entity;
				if (((previousValue != value) 
							|| (this._registro_jardin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._registro_jardin.Entity = null;
						previousValue.niños.Remove(this);
					}
					this._registro_jardin.Entity = value;
					if ((value != null))
					{
						value.niños.Add(this);
						this._fk_idJardin = value.idJardin;
					}
					else
					{
						this._fk_idJardin = default(int);
					}
					this.SendPropertyChanged("registro_jardin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_sangre_niños", Storage="_tipo_sangre", ThisKey="fk_idTipSangre", OtherKey="idTipoSangre", IsForeignKey=true)]
		public tipo_sangre tipo_sangre
		{
			get
			{
				return this._tipo_sangre.Entity;
			}
			set
			{
				tipo_sangre previousValue = this._tipo_sangre.Entity;
				if (((previousValue != value) 
							|| (this._tipo_sangre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipo_sangre.Entity = null;
						previousValue.niños.Remove(this);
					}
					this._tipo_sangre.Entity = value;
					if ((value != null))
					{
						value.niños.Add(this);
						this._fk_idTipSangre = value.idTipoSangre;
					}
					else
					{
						this._fk_idTipSangre = default(int);
					}
					this.SendPropertyChanged("tipo_sangre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuarios_niños", Storage="_usuarios", ThisKey="idNiño", OtherKey="idUsuario", IsForeignKey=true)]
		public usuarios usuarios
		{
			get
			{
				return this._usuarios.Entity;
			}
			set
			{
				usuarios previousValue = this._usuarios.Entity;
				if (((previousValue != value) 
							|| (this._usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuarios.Entity = null;
						previousValue.niños = null;
					}
					this._usuarios.Entity = value;
					if ((value != null))
					{
						value.niños = this;
						this._idNiño = value.idUsuario;
					}
					else
					{
						this._idNiño = default(int);
					}
					this.SendPropertyChanged("usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registro_asistencia(registro_asistencia entity)
		{
			this.SendPropertyChanging();
			entity.niños = this;
		}
		
		private void detach_registro_asistencia(registro_asistencia entity)
		{
			this.SendPropertyChanging();
			entity.niños = null;
		}
		
		private void attach_registro_avance_academico(registro_avance_academico entity)
		{
			this.SendPropertyChanging();
			entity.niños = this;
		}
		
		private void detach_registro_avance_academico(registro_avance_academico entity)
		{
			this.SendPropertyChanging();
			entity.niños = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.notas")]
	public partial class notas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNotas;
		
		private string _nomNotas;
		
		private EntitySet<registro_avance_academico> _registro_avance_academico;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNotasChanging(int value);
    partial void OnidNotasChanged();
    partial void OnnomNotasChanging(string value);
    partial void OnnomNotasChanged();
    #endregion
		
		public notas()
		{
			this._registro_avance_academico = new EntitySet<registro_avance_academico>(new Action<registro_avance_academico>(this.attach_registro_avance_academico), new Action<registro_avance_academico>(this.detach_registro_avance_academico));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNotas", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNotas
		{
			get
			{
				return this._idNotas;
			}
			set
			{
				if ((this._idNotas != value))
				{
					this.OnidNotasChanging(value);
					this.SendPropertyChanging();
					this._idNotas = value;
					this.SendPropertyChanged("idNotas");
					this.OnidNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomNotas", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string nomNotas
		{
			get
			{
				return this._nomNotas;
			}
			set
			{
				if ((this._nomNotas != value))
				{
					this.OnnomNotasChanging(value);
					this.SendPropertyChanging();
					this._nomNotas = value;
					this.SendPropertyChanged("nomNotas");
					this.OnnomNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="notas_registro_avance_academico", Storage="_registro_avance_academico", ThisKey="idNotas", OtherKey="fk_idNotas")]
		public EntitySet<registro_avance_academico> registro_avance_academico
		{
			get
			{
				return this._registro_avance_academico;
			}
			set
			{
				this._registro_avance_academico.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registro_avance_academico(registro_avance_academico entity)
		{
			this.SendPropertyChanging();
			entity.notas = this;
		}
		
		private void detach_registro_avance_academico(registro_avance_academico entity)
		{
			this.SendPropertyChanging();
			entity.notas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nivel")]
	public partial class nivel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNivel;
		
		private string _nomNivel;
		
		private EntitySet<registro_avance_academico> _registro_avance_academico;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNivelChanging(int value);
    partial void OnidNivelChanged();
    partial void OnnomNivelChanging(string value);
    partial void OnnomNivelChanged();
    #endregion
		
		public nivel()
		{
			this._registro_avance_academico = new EntitySet<registro_avance_academico>(new Action<registro_avance_academico>(this.attach_registro_avance_academico), new Action<registro_avance_academico>(this.detach_registro_avance_academico));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNivel", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNivel
		{
			get
			{
				return this._idNivel;
			}
			set
			{
				if ((this._idNivel != value))
				{
					this.OnidNivelChanging(value);
					this.SendPropertyChanging();
					this._idNivel = value;
					this.SendPropertyChanged("idNivel");
					this.OnidNivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomNivel", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string nomNivel
		{
			get
			{
				return this._nomNivel;
			}
			set
			{
				if ((this._nomNivel != value))
				{
					this.OnnomNivelChanging(value);
					this.SendPropertyChanging();
					this._nomNivel = value;
					this.SendPropertyChanged("nomNivel");
					this.OnnomNivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nivel_registro_avance_academico", Storage="_registro_avance_academico", ThisKey="idNivel", OtherKey="fk_idNivel")]
		public EntitySet<registro_avance_academico> registro_avance_academico
		{
			get
			{
				return this._registro_avance_academico;
			}
			set
			{
				this._registro_avance_academico.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registro_avance_academico(registro_avance_academico entity)
		{
			this.SendPropertyChanging();
			entity.nivel = this;
		}
		
		private void detach_registro_avance_academico(registro_avance_academico entity)
		{
			this.SendPropertyChanging();
			entity.nivel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registro_asistencia")]
	public partial class registro_asistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRegAsistencia;
		
		private System.DateTime _fechaAsistencia;
		
		private int _fk_idNiño;
		
		private int _fk_idEstado;
		
		private int _fk_idMadCom;
		
		private EntityRef<estados> _estados;
		
		private EntityRef<niños> _niños;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRegAsistenciaChanging(int value);
    partial void OnidRegAsistenciaChanged();
    partial void OnfechaAsistenciaChanging(System.DateTime value);
    partial void OnfechaAsistenciaChanged();
    partial void Onfk_idNiñoChanging(int value);
    partial void Onfk_idNiñoChanged();
    partial void Onfk_idEstadoChanging(int value);
    partial void Onfk_idEstadoChanged();
    partial void Onfk_idMadComChanging(int value);
    partial void Onfk_idMadComChanged();
    #endregion
		
		public registro_asistencia()
		{
			this._estados = default(EntityRef<estados>);
			this._niños = default(EntityRef<niños>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRegAsistencia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRegAsistencia
		{
			get
			{
				return this._idRegAsistencia;
			}
			set
			{
				if ((this._idRegAsistencia != value))
				{
					this.OnidRegAsistenciaChanging(value);
					this.SendPropertyChanging();
					this._idRegAsistencia = value;
					this.SendPropertyChanged("idRegAsistencia");
					this.OnidRegAsistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaAsistencia", DbType="Date NOT NULL")]
		public System.DateTime fechaAsistencia
		{
			get
			{
				return this._fechaAsistencia;
			}
			set
			{
				if ((this._fechaAsistencia != value))
				{
					this.OnfechaAsistenciaChanging(value);
					this.SendPropertyChanging();
					this._fechaAsistencia = value;
					this.SendPropertyChanged("fechaAsistencia");
					this.OnfechaAsistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idNiño", DbType="Int NOT NULL")]
		public int fk_idNiño
		{
			get
			{
				return this._fk_idNiño;
			}
			set
			{
				if ((this._fk_idNiño != value))
				{
					if (this._niños.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idNiñoChanging(value);
					this.SendPropertyChanging();
					this._fk_idNiño = value;
					this.SendPropertyChanged("fk_idNiño");
					this.Onfk_idNiñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idEstado", DbType="Int NOT NULL")]
		public int fk_idEstado
		{
			get
			{
				return this._fk_idEstado;
			}
			set
			{
				if ((this._fk_idEstado != value))
				{
					if (this._estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idEstadoChanging(value);
					this.SendPropertyChanging();
					this._fk_idEstado = value;
					this.SendPropertyChanged("fk_idEstado");
					this.Onfk_idEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idMadCom", DbType="Int NOT NULL")]
		public int fk_idMadCom
		{
			get
			{
				return this._fk_idMadCom;
			}
			set
			{
				if ((this._fk_idMadCom != value))
				{
					this.Onfk_idMadComChanging(value);
					this.SendPropertyChanging();
					this._fk_idMadCom = value;
					this.SendPropertyChanged("fk_idMadCom");
					this.Onfk_idMadComChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_registro_asistencia", Storage="_estados", ThisKey="fk_idEstado", OtherKey="idEstado", IsForeignKey=true)]
		public estados estados
		{
			get
			{
				return this._estados.Entity;
			}
			set
			{
				estados previousValue = this._estados.Entity;
				if (((previousValue != value) 
							|| (this._estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estados.Entity = null;
						previousValue.registro_asistencia.Remove(this);
					}
					this._estados.Entity = value;
					if ((value != null))
					{
						value.registro_asistencia.Add(this);
						this._fk_idEstado = value.idEstado;
					}
					else
					{
						this._fk_idEstado = default(int);
					}
					this.SendPropertyChanged("estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="niños_registro_asistencia", Storage="_niños", ThisKey="fk_idNiño", OtherKey="idNiño", IsForeignKey=true)]
		public niños niños
		{
			get
			{
				return this._niños.Entity;
			}
			set
			{
				niños previousValue = this._niños.Entity;
				if (((previousValue != value) 
							|| (this._niños.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._niños.Entity = null;
						previousValue.registro_asistencia.Remove(this);
					}
					this._niños.Entity = value;
					if ((value != null))
					{
						value.registro_asistencia.Add(this);
						this._fk_idNiño = value.idNiño;
					}
					else
					{
						this._fk_idNiño = default(int);
					}
					this.SendPropertyChanged("niños");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registro_avance_academico")]
	public partial class registro_avance_academico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRegAvAcademico;
		
		private int _fk_idNiño;
		
		private System.DateTime _fecEntregaNotas;
		
		private int _añoEscolar;
		
		private string _descripcion;
		
		private int _fk_idNotas;
		
		private int _fk_idNivel;
		
		private EntityRef<niños> _niños;
		
		private EntityRef<nivel> _nivel;
		
		private EntityRef<notas> _notas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRegAvAcademicoChanging(int value);
    partial void OnidRegAvAcademicoChanged();
    partial void Onfk_idNiñoChanging(int value);
    partial void Onfk_idNiñoChanged();
    partial void OnfecEntregaNotasChanging(System.DateTime value);
    partial void OnfecEntregaNotasChanged();
    partial void OnañoEscolarChanging(int value);
    partial void OnañoEscolarChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void Onfk_idNotasChanging(int value);
    partial void Onfk_idNotasChanged();
    partial void Onfk_idNivelChanging(int value);
    partial void Onfk_idNivelChanged();
    #endregion
		
		public registro_avance_academico()
		{
			this._niños = default(EntityRef<niños>);
			this._nivel = default(EntityRef<nivel>);
			this._notas = default(EntityRef<notas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRegAvAcademico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRegAvAcademico
		{
			get
			{
				return this._idRegAvAcademico;
			}
			set
			{
				if ((this._idRegAvAcademico != value))
				{
					this.OnidRegAvAcademicoChanging(value);
					this.SendPropertyChanging();
					this._idRegAvAcademico = value;
					this.SendPropertyChanged("idRegAvAcademico");
					this.OnidRegAvAcademicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idNiño", DbType="Int NOT NULL")]
		public int fk_idNiño
		{
			get
			{
				return this._fk_idNiño;
			}
			set
			{
				if ((this._fk_idNiño != value))
				{
					if (this._niños.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idNiñoChanging(value);
					this.SendPropertyChanging();
					this._fk_idNiño = value;
					this.SendPropertyChanged("fk_idNiño");
					this.Onfk_idNiñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecEntregaNotas", DbType="Date NOT NULL")]
		public System.DateTime fecEntregaNotas
		{
			get
			{
				return this._fecEntregaNotas;
			}
			set
			{
				if ((this._fecEntregaNotas != value))
				{
					this.OnfecEntregaNotasChanging(value);
					this.SendPropertyChanging();
					this._fecEntregaNotas = value;
					this.SendPropertyChanged("fecEntregaNotas");
					this.OnfecEntregaNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_añoEscolar", DbType="Int NOT NULL")]
		public int añoEscolar
		{
			get
			{
				return this._añoEscolar;
			}
			set
			{
				if ((this._añoEscolar != value))
				{
					this.OnañoEscolarChanging(value);
					this.SendPropertyChanging();
					this._añoEscolar = value;
					this.SendPropertyChanged("añoEscolar");
					this.OnañoEscolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="NVarChar(225) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idNotas", DbType="Int NOT NULL")]
		public int fk_idNotas
		{
			get
			{
				return this._fk_idNotas;
			}
			set
			{
				if ((this._fk_idNotas != value))
				{
					if (this._notas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idNotasChanging(value);
					this.SendPropertyChanging();
					this._fk_idNotas = value;
					this.SendPropertyChanged("fk_idNotas");
					this.Onfk_idNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idNivel", DbType="Int NOT NULL")]
		public int fk_idNivel
		{
			get
			{
				return this._fk_idNivel;
			}
			set
			{
				if ((this._fk_idNivel != value))
				{
					if (this._nivel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idNivelChanging(value);
					this.SendPropertyChanging();
					this._fk_idNivel = value;
					this.SendPropertyChanged("fk_idNivel");
					this.Onfk_idNivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="niños_registro_avance_academico", Storage="_niños", ThisKey="fk_idNiño", OtherKey="idNiño", IsForeignKey=true)]
		public niños niños
		{
			get
			{
				return this._niños.Entity;
			}
			set
			{
				niños previousValue = this._niños.Entity;
				if (((previousValue != value) 
							|| (this._niños.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._niños.Entity = null;
						previousValue.registro_avance_academico.Remove(this);
					}
					this._niños.Entity = value;
					if ((value != null))
					{
						value.registro_avance_academico.Add(this);
						this._fk_idNiño = value.idNiño;
					}
					else
					{
						this._fk_idNiño = default(int);
					}
					this.SendPropertyChanged("niños");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nivel_registro_avance_academico", Storage="_nivel", ThisKey="fk_idNivel", OtherKey="idNivel", IsForeignKey=true)]
		public nivel nivel
		{
			get
			{
				return this._nivel.Entity;
			}
			set
			{
				nivel previousValue = this._nivel.Entity;
				if (((previousValue != value) 
							|| (this._nivel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nivel.Entity = null;
						previousValue.registro_avance_academico.Remove(this);
					}
					this._nivel.Entity = value;
					if ((value != null))
					{
						value.registro_avance_academico.Add(this);
						this._fk_idNivel = value.idNivel;
					}
					else
					{
						this._fk_idNivel = default(int);
					}
					this.SendPropertyChanged("nivel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="notas_registro_avance_academico", Storage="_notas", ThisKey="fk_idNotas", OtherKey="idNotas", IsForeignKey=true)]
		public notas notas
		{
			get
			{
				return this._notas.Entity;
			}
			set
			{
				notas previousValue = this._notas.Entity;
				if (((previousValue != value) 
							|| (this._notas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._notas.Entity = null;
						previousValue.registro_avance_academico.Remove(this);
					}
					this._notas.Entity = value;
					if ((value != null))
					{
						value.registro_avance_academico.Add(this);
						this._fk_idNotas = value.idNotas;
					}
					else
					{
						this._fk_idNotas = default(int);
					}
					this.SendPropertyChanged("notas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registro_jardin")]
	public partial class registro_jardin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idJardin;
		
		private string _nomJardin;
		
		private string _direccionJardin;
		
		private int _fk_idEstado;
		
		private EntitySet<niños> _niños;
		
		private EntityRef<estados> _estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidJardinChanging(int value);
    partial void OnidJardinChanged();
    partial void OnnomJardinChanging(string value);
    partial void OnnomJardinChanged();
    partial void OndireccionJardinChanging(string value);
    partial void OndireccionJardinChanged();
    partial void Onfk_idEstadoChanging(int value);
    partial void Onfk_idEstadoChanged();
    #endregion
		
		public registro_jardin()
		{
			this._niños = new EntitySet<niños>(new Action<niños>(this.attach_niños), new Action<niños>(this.detach_niños));
			this._estados = default(EntityRef<estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idJardin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idJardin
		{
			get
			{
				return this._idJardin;
			}
			set
			{
				if ((this._idJardin != value))
				{
					this.OnidJardinChanging(value);
					this.SendPropertyChanging();
					this._idJardin = value;
					this.SendPropertyChanged("idJardin");
					this.OnidJardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomJardin", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string nomJardin
		{
			get
			{
				return this._nomJardin;
			}
			set
			{
				if ((this._nomJardin != value))
				{
					this.OnnomJardinChanging(value);
					this.SendPropertyChanging();
					this._nomJardin = value;
					this.SendPropertyChanged("nomJardin");
					this.OnnomJardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccionJardin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string direccionJardin
		{
			get
			{
				return this._direccionJardin;
			}
			set
			{
				if ((this._direccionJardin != value))
				{
					this.OndireccionJardinChanging(value);
					this.SendPropertyChanging();
					this._direccionJardin = value;
					this.SendPropertyChanged("direccionJardin");
					this.OndireccionJardinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idEstado", DbType="Int NOT NULL")]
		public int fk_idEstado
		{
			get
			{
				return this._fk_idEstado;
			}
			set
			{
				if ((this._fk_idEstado != value))
				{
					if (this._estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idEstadoChanging(value);
					this.SendPropertyChanging();
					this._fk_idEstado = value;
					this.SendPropertyChanged("fk_idEstado");
					this.Onfk_idEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registro_jardin_niños", Storage="_niños", ThisKey="idJardin", OtherKey="fk_idJardin")]
		public EntitySet<niños> niños
		{
			get
			{
				return this._niños;
			}
			set
			{
				this._niños.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_registro_jardin", Storage="_estados", ThisKey="fk_idEstado", OtherKey="idEstado", IsForeignKey=true)]
		public estados estados
		{
			get
			{
				return this._estados.Entity;
			}
			set
			{
				estados previousValue = this._estados.Entity;
				if (((previousValue != value) 
							|| (this._estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estados.Entity = null;
						previousValue.registro_jardin.Remove(this);
					}
					this._estados.Entity = value;
					if ((value != null))
					{
						value.registro_jardin.Add(this);
						this._fk_idEstado = value.idEstado;
					}
					else
					{
						this._fk_idEstado = default(int);
					}
					this.SendPropertyChanged("estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.registro_jardin = this;
		}
		
		private void detach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.registro_jardin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRol;
		
		private string _nomRol;
		
		private EntitySet<usuarios> _usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnnomRolChanging(string value);
    partial void OnnomRolChanged();
    #endregion
		
		public roles()
		{
			this._usuarios = new EntitySet<usuarios>(new Action<usuarios>(this.attach_usuarios), new Action<usuarios>(this.detach_usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomRol", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string nomRol
		{
			get
			{
				return this._nomRol;
			}
			set
			{
				if ((this._nomRol != value))
				{
					this.OnnomRolChanging(value);
					this.SendPropertyChanging();
					this._nomRol = value;
					this.SendPropertyChanged("nomRol");
					this.OnnomRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="roles_usuarios", Storage="_usuarios", ThisKey="idRol", OtherKey="fk_idRol")]
		public EntitySet<usuarios> usuarios
		{
			get
			{
				return this._usuarios;
			}
			set
			{
				this._usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_usuarios(usuarios entity)
		{
			this.SendPropertyChanging();
			entity.roles = this;
		}
		
		private void detach_usuarios(usuarios entity)
		{
			this.SendPropertyChanging();
			entity.roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipo_estados")]
	public partial class tipo_estados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTipEstados;
		
		private string _nomTipEstados;
		
		private EntitySet<estados> _estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipEstadosChanging(int value);
    partial void OnidTipEstadosChanged();
    partial void OnnomTipEstadosChanging(string value);
    partial void OnnomTipEstadosChanged();
    #endregion
		
		public tipo_estados()
		{
			this._estados = new EntitySet<estados>(new Action<estados>(this.attach_estados), new Action<estados>(this.detach_estados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipEstados", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTipEstados
		{
			get
			{
				return this._idTipEstados;
			}
			set
			{
				if ((this._idTipEstados != value))
				{
					this.OnidTipEstadosChanging(value);
					this.SendPropertyChanging();
					this._idTipEstados = value;
					this.SendPropertyChanged("idTipEstados");
					this.OnidTipEstadosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomTipEstados", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string nomTipEstados
		{
			get
			{
				return this._nomTipEstados;
			}
			set
			{
				if ((this._nomTipEstados != value))
				{
					this.OnnomTipEstadosChanging(value);
					this.SendPropertyChanging();
					this._nomTipEstados = value;
					this.SendPropertyChanged("nomTipEstados");
					this.OnnomTipEstadosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_estados_estados", Storage="_estados", ThisKey="idTipEstados", OtherKey="fk_idTiposEstados")]
		public EntitySet<estados> estados
		{
			get
			{
				return this._estados;
			}
			set
			{
				this._estados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_estados(estados entity)
		{
			this.SendPropertyChanging();
			entity.tipo_estados = this;
		}
		
		private void detach_estados(estados entity)
		{
			this.SendPropertyChanging();
			entity.tipo_estados = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipo_sangre")]
	public partial class tipo_sangre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTipoSangre;
		
		private string _nomTipoSangre;
		
		private EntitySet<niños> _niños;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoSangreChanging(int value);
    partial void OnidTipoSangreChanged();
    partial void OnnomTipoSangreChanging(string value);
    partial void OnnomTipoSangreChanged();
    #endregion
		
		public tipo_sangre()
		{
			this._niños = new EntitySet<niños>(new Action<niños>(this.attach_niños), new Action<niños>(this.detach_niños));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoSangre", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTipoSangre
		{
			get
			{
				return this._idTipoSangre;
			}
			set
			{
				if ((this._idTipoSangre != value))
				{
					this.OnidTipoSangreChanging(value);
					this.SendPropertyChanging();
					this._idTipoSangre = value;
					this.SendPropertyChanged("idTipoSangre");
					this.OnidTipoSangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomTipoSangre", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string nomTipoSangre
		{
			get
			{
				return this._nomTipoSangre;
			}
			set
			{
				if ((this._nomTipoSangre != value))
				{
					this.OnnomTipoSangreChanging(value);
					this.SendPropertyChanging();
					this._nomTipoSangre = value;
					this.SendPropertyChanged("nomTipoSangre");
					this.OnnomTipoSangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_sangre_niños", Storage="_niños", ThisKey="idTipoSangre", OtherKey="fk_idTipSangre")]
		public EntitySet<niños> niños
		{
			get
			{
				return this._niños;
			}
			set
			{
				this._niños.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.tipo_sangre = this;
		}
		
		private void detach_niños(niños entity)
		{
			this.SendPropertyChanging();
			entity.tipo_sangre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuarios")]
	public partial class usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private string _nombre;
		
		private string _numIdentificacion;
		
		private string _telefono;
		
		private string _celular;
		
		private string _direccion;
		
		private string _email;
		
		private int _fk_idRol;
		
		private System.DateTime _fechaNacimiento;
		
		private string _clave;
		
		private EntityRef<niños> _niños;
		
		private EntityRef<roles> _roles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnnumIdentificacionChanging(string value);
    partial void OnnumIdentificacionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onfk_idRolChanging(int value);
    partial void Onfk_idRolChanged();
    partial void OnfechaNacimientoChanging(System.DateTime value);
    partial void OnfechaNacimientoChanged();
    partial void OnclaveChanging(string value);
    partial void OnclaveChanged();
    #endregion
		
		public usuarios()
		{
			this._niños = default(EntityRef<niños>);
			this._roles = default(EntityRef<roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numIdentificacion", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string numIdentificacion
		{
			get
			{
				return this._numIdentificacion;
			}
			set
			{
				if ((this._numIdentificacion != value))
				{
					this.OnnumIdentificacionChanging(value);
					this.SendPropertyChanging();
					this._numIdentificacion = value;
					this.SendPropertyChanged("numIdentificacion");
					this.OnnumIdentificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="NVarChar(50)")]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(150)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_idRol", DbType="Int NOT NULL")]
		public int fk_idRol
		{
			get
			{
				return this._fk_idRol;
			}
			set
			{
				if ((this._fk_idRol != value))
				{
					if (this._roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_idRolChanging(value);
					this.SendPropertyChanging();
					this._fk_idRol = value;
					this.SendPropertyChanged("fk_idRol");
					this.Onfk_idRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime fechaNacimiento
		{
			get
			{
				return this._fechaNacimiento;
			}
			set
			{
				if ((this._fechaNacimiento != value))
				{
					this.OnfechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._fechaNacimiento = value;
					this.SendPropertyChanged("fechaNacimiento");
					this.OnfechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clave", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string clave
		{
			get
			{
				return this._clave;
			}
			set
			{
				if ((this._clave != value))
				{
					this.OnclaveChanging(value);
					this.SendPropertyChanging();
					this._clave = value;
					this.SendPropertyChanged("clave");
					this.OnclaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuarios_niños", Storage="_niños", ThisKey="idUsuario", OtherKey="idNiño", IsUnique=true, IsForeignKey=false)]
		public niños niños
		{
			get
			{
				return this._niños.Entity;
			}
			set
			{
				niños previousValue = this._niños.Entity;
				if (((previousValue != value) 
							|| (this._niños.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._niños.Entity = null;
						previousValue.usuarios = null;
					}
					this._niños.Entity = value;
					if ((value != null))
					{
						value.usuarios = this;
					}
					this.SendPropertyChanged("niños");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="roles_usuarios", Storage="_roles", ThisKey="fk_idRol", OtherKey="idRol", IsForeignKey=true)]
		public roles roles
		{
			get
			{
				return this._roles.Entity;
			}
			set
			{
				roles previousValue = this._roles.Entity;
				if (((previousValue != value) 
							|| (this._roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._roles.Entity = null;
						previousValue.usuarios.Remove(this);
					}
					this._roles.Entity = value;
					if ((value != null))
					{
						value.usuarios.Add(this);
						this._fk_idRol = value.idRol;
					}
					else
					{
						this._fk_idRol = default(int);
					}
					this.SendPropertyChanged("roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
